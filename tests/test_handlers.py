import gzip
import io
import urllib.parse

import pandas as pd
from tornado import gen
from tornado.escape import json_encode, json_decode
from tornado.httpclient import AsyncHTTPClient, HTTPRequest
from tornado.testing import AsyncTestCase, gen_test
from io import BytesIO, StringIO

from uniprotparser.parser import UniprotSequence, UniprotParser

example = ['Q9QYG0', 'Q8CH09', 'P60904', 'Q68FE2', 'B5TVM2', 'Q99J09', 'Q9CRA5', 'Q08509', 'Q9Z2H5', 'Q8BU14', 'Q8BGR5', 'Q6PAL7', 'Q52KF3', 'E9Q6J5', 'O09044', 'Q6P9R2', 'A2AQ25', 'Q9WTR1', 'P70698', 'Q6PCN3', 'P46467', 'P63017', 'Q62277', 'Q8C078', 'P63216', 'Q8C7M3', 'Q9CPW0', 'Q62422', 'Q80XU8', 'P62874', 'B1AZP2', 'O55017', 'Q7TPB0', 'Q9ERB5', 'P28652', 'Q8C996', 'Q9CQJ6', 'Q810A7', 'Q8BHE3', 'O35623', 'E9Q401', 'Q9QZM0', 'Q6A0A2', 'Q8K019', 'Q9QXM1', 'Q99K28', 'Q6DVA0', 'P35486', 'Q8BR92', 'Q06180', 'O35927; Q68FH0', 'Q80X50', 'P56812', 'Q7TQF2', 'Q61337', 'Q99MI1', 'Q9JIS5', 'P47746', 'Q9CZY3', 'Q8C008', 'Q64332; O88935', 'P17095', 'Q9JHG6', 'O08553; P97427', 'Q91WG7', 'P18052', 'P08228', 'B1AWN6', 'Q8BRT1', 'Q6URW6', 'Q61290', 'Q8C6B2', 'Q6PGL7', 'Q3V3Q7', 'Q8K245', 'Q61301', 'B1AWN6; A2APX8', 'Q9DCB4', 'Q8R4E6', 'Q6NZQ8', 'Q8R361', 'Q9QYF9', 'A2RSJ4', 'P62492', 'Q6ZPE2', 'Q6P5F6', 'P62482', 'O70161', 'Q9WUC3', 'Q8K3F6', 'Q68EF6', 'Q01853', 'Q9R0P9', 'Q8C031', 'Q5SXY1', 'P59281', 'P61982; Q9CQV8', 'P68369', 'Q9D0E1', 'Q8VC85', 'Q61644', 'Q8C8R3', 'Q60803', 'Q6P5G6', 'O70194', 'Q62172', 'Q9ESN6', 'O88910', 'Q9ES97', 'Q8CIQ7', 'Q61701', 'Q58A65', 'Q2NL51', 'Q80TJ1', 'Q91WS0', 'P08551', 'Q99KI0', 'P97434', 'O88485', 'Q99NF8', 'Q5U4C3', 'Q8VEL9', 'Q80YN3', 'P63101', 'Q5XJE5', 'Q6PHU5', 'Q8BMG7', 'Q8R4U7', 'Q9Z1D1', 'P01831', 'Q5PR69', 'Q9WU60', 'A2A5R2', 'Q8BGV8', 'Q7TPM6', 'Q6NS60', 'Q00PI9', 'Q91W67', 'Q8VED9', 'Q8BPN8', 'Q91ZZ3; O55042', 'Q8BH64', 'Q9D164', 'Q9JKF6', 'Q99JP7', 'P70205', 'A2ALS5', 'Q61171', 'Q9JJY3', 'P10126', 'Q99KF1', 'Q8K221', 'Q3TIR3', 'P70310', 'Q8BG67', 'Q8BL97', 'P60191', 'Q3UH99', 'Q9CZC8', 'O70166', 'Q9QYM9', 'Q8K1J5', 'Q61029', 'B2RRE7', 'Q8BG95', 'Q9ES28', 'O08539', 'Q8VBT0', 'Q3UJB9', 'O88384', 'Q8BWG8', 'Q9JME5', 'P84086', 'Q8R149', 'Q3UH60', 'Q9ES00', 'Q6PHZ5', 'Q61136', 'Q920R0', 'Q640R3', 'O55003', 'Q8K596', 'D3YZU1', 'P31324', 'Q6PD24', 'Q8C052', 'O88343', 'P62858', 'Q5DTM8', 'Q7TMM9; Q9ERD7', 'Q69ZK0', 'Q812A2', 'P0C913', 'Q8R554', 'Q7TSK3', 'Q99P72', 'Q3UHE1', 'D3YZP9', 'Q8C079', 'Q3TLI0', 'O54724', 'Q8BHJ6', 'P52480', 'Q8BFT9', 'P16858', 'A1A5B6', 'Q925J9', 'Q5NCR9', 'Q8BP78', 'P70704', 'Q8CDA1', 'P61329', 'P0DP27', 'Q61609', 'Q61143', 'O70551', 'P63044', 'A2AJA9', 'P42859', 'Q5GH67', 'Q80W04', 'A2AHC3', 'Q60790', 'Q3TIX9', 'O70133', 'O70435', 'Q5EG47', 'P62823', 'Q9QYS2', 'P16054', 'O09106', 'Q3UHB8', 'Q60771', 'O35621', 'Q6P9R1', 'P62806', 'Q6GYP7', 'Q8C0Y0', 'Q9DBR7', 'Q3TWW8', 'P97379', 'Q80WG5', 'Q2WF71', 'P48453', 'Q9JMG7', 'Q6R891', 'Q9R1R2', 'Q8BVF2', 'Q8CG80', 'O35295', 'Q8K1M6', 'P53986', 'P09470', 'Q8BVQ5', 'Q922S4', 'Q78PG9', 'Q8K2Y9', 'Q80TT8', 'Q99NE5', 'Q5SSM3', 'B1AZA5', 'Q8C729', 'Q9D3A9', 'Q3TLH4', 'P48678', 'Q3UHD6', 'P15105', 'P13595', 'P61807', 'Q9Z0R4', 'Q0PHV7', 'Q3UH68', 'Q9R020', 'Q8VH51', 'Q8R574', 'A2ALU4', 'Q5DQR4', 'Q9JI11', 'Q922D4', 'Q91WG2', 'Q8BYM5', 'P61264', 'O88543', 'P11499', 'Q9D415', 'Q80TE4', 'Q8BGD8', 'Q52KI8', 'Q9D0P0', 'Q99NF2', 'Q68FF6', 'Q7TSH8', 'Q69ZC8', 'Q01768', 'O08576', 'Q8K3E5', 'P62259', 'P70336', 'P70429', 'Q80WJ7', 'Q3UFK8', 'Q5FW85', 'Q76N33', 'Q5SVR0', 'Q921M7', 'Q8CJ19', 'Q91VU8', 'Q80U19', 'Q9CYR6', 'P47757', 'Q91V92', 'Q8BH04', 'Q80Y17', 'Q7TPS0', 'Q8N7N5', 'Q03141', 'Q8BG39', 'P55288', 'P12382', 'O55143', 'Q9Z351', 'Q8C9H6', 'Q03173', 'D3YZI9', 'Q8BGD9', 'F6ZDS4', 'P70296', 'P04370', 'P07901', 'Q5U4D8', 'Q3UHL1', 'Q8CHU3', 'D3YVF0', 'Q5DTY9', 'Q9Z1T1', 'Q9Z0W1', 'Q8BSS9', 'Q8BLQ9', 'G5E8K5', 'Q8K382', 'Q9CY64', 'P56695', 'Q8C1D8', 'P14152', 'Q8CH72', 'Q8BL65', 'Q8VHW2', 'P47708', 'Q791T5', 'Q04447', 'Q8C739', 'O54829', 'P48722', 'P42208', 'Q6IR34', 'Q9WTS4', 'Q8CI95', 'Q8CIB6', 'Q8QZT1', 'Q99L43', 'Q6P9K8', 'Q6ZPF3', 'Q68EF0', 'Q66L44', 'Q9D7P6', 'P28661', 'Q99PU5', 'O55131', 'Q0VGY8', 'Q0VBL3', 'Q8K3G9', 'Q9JMH9', 'Q68ED2', 'Q3UH66', 'O35551', 'Q2KN98', 'Q80U28', 'Q8BRJ3', 'O88487', 'Q9ESJ4', 'Q8R071', 'P23242', 'Q6I6G8', 'O55023', 'Q7M750', 'Q7M753', 'Q91VN4', 'Q99PG2', 'Q91YD9', 'Q9WV34', 'Q9D6E4', 'Q99JN2', 'P49769', 'Q99P31', 'Q91XM9', 'Q80VC9', 'Q8CAA7', 'Q9WV92', 'Q8JZR6', 'Q04692', 'P47857', 'Q8K3H0', 'Q8K2F8', 'Q8BTI8', 'Q8K0D0', 'Q8BP27', 'B1AVZ0', 'Q80TV8', 'P28028', 'Q8K2C9', 'Q80U40', 'Q9CQV4', 'Q8BJ42', 'Q3UHX2', 'P62484', 'Q6A4J8', 'Q60829', 'Q61879', 'Q61771', 'Q9JMK2', 'Q91X56', 'Q64475', 'Q6PIC6; Q6PIE5', 'P68510', 'Q9ET80', 'P68510; P68254; P61982; Q9CQV8; P63101; P62259', 'A2ADY9', 'Q9Z0H8', 'Q8CGB6', 'Q9CSN1', 'Q7TMM9', 'P70414', 'Q8BVE8', 'Q62393', 'Q9Z2Q6', 'Q04690', 'P51859', 'Q6PAM0', 'Q7TMY8', 'Q9Z2D6', 'Q9ET77', 'Q9EQQ9', 'Q91X58', 'A2A791', 'Q7SIG6', 'Q4KUS2', 'P97801', 'P70333', 'Q6ZQ58', 'Q9Z1K7', 'Q9EPN1', 'Q9Z0P4', 'O35874', 'Q99JF8', 'Q6PCP5', 'Q8BHK2', 'Q8R0S4', 'Q8BUV3', 'Q9EQH3', 'P97855', 'P62956', 'A2AKY4', 'Q8CHC4', 'Q05512', 'P97427', 'Q4ACU6', 'P20357', 'Q9CQF4', 'Q8BZN6', 'A2AIV2', 'Q9D4C9', 'Q9D6W8', 'Q03717', 'A2AF53', 'P63085', 'P83510', 'Q6P9S0', 'Q91VC7', 'Q61074', 'P70288', 'P52483', 'Q8BZ98', 'P48432', 'Q9DBR1', 'Q6VNB8', 'P48437', 'A2AR02', 'O08547', 'Q8R001', 'Q08460', 'E9QAT4', 'Q8K0B2', 'Q8BQZ4', 'P43006', 'P48542', 'Q05D44', 'Q9JL26', 'O88447', 'O08553', 'Q8BNW9', 'Q5FWK3', 'Q8BGT8', 'Q80TL0', 'Q3UVX5', 'P56212', 'Q3THK7', 'Q62417', 'Q9DBH0', 'Q8K1A6', 'Q9WV60', 'Q8VHJ5', 'O08582', 'Q63912', 'Q8CIP4', 'Q6PFD5', 'Q60932', 'P0C0A3', 'Q8R5M8', 'P59648', 'P70271', 'O54774', 'Q9EQJ9', 'Q80YA9', 'Q8VD37', 'Q7TMM9; Q9D6F9; Q9ERD7; A2AQ07; P68372', 'Q99MR6', 'Q569Z6', 'P70181', 'Q8C0D4', 'Q80U87', 'B9EKI3', 'Q7TQF7', 'P50396', 'Q3TQI7', 'P31750', 'P33173', 'O55106', 'C0HKD9', 'Q8R146', 'Q3B7Z2', 'O88737; Q9QYX7', 'Q8JZW5', 'O54916', 'Q9CZW5', 'Q60949', 'Q9D920', 'P51830', 'Q80TL1', 'Q80YR9', 'P70362', 'Q8BTG7', 'Q80XA6', 'Q91YM2', 'Q9WV72', 'Q6PD03', 'P41234', 'Q80X80', 'Q99JP6', 'Q9QWI6', 'O09044; P60879', 'P68181', 'Q3UMT1', 'O88737', 'Q9CX84', 'Q3UN16', 'Q3UTQ8', 'E9PUL5', 'P11881', 'G5E829', 'Q9CYT6', 'Q9ESX5', 'Q8BRV5', 'Q9D2V7', 'Q9JJG0', 'Q61743', 'Q9DBR2', 'Q9Z0U1', 'Q8BNA6', 'Q8VCY8', 'P62984', 'O70310', 'Q62415', 'O35927', 'Q6PDH0', 'Q9EPU0', 'Q9Z0V2', 'Q9JM96', 'Q5DTT2', 'Q8BGH4', 'Q80U49', 'Q8VHL1', 'P83510; Q9JM52', 'Q8C419', 'Q99PU8', 'P97797', 'P14094', 'Q9WVR4', 'Q03141; Q8VHJ5; Q8CIP4; Q05512', 'Q9Z1X4', 'Q5DTL9', 'O54988', 'P68404', 'Q56A07', 'Q8K2I1', 'Q9R1V6', 'Q9D8Y0', 'Q3UQ44', 'Q02780', 'Q61548', 'E9Q4S1', 'Q9JLM8', 'Q9EQZ7', 'Q9D1F4', 'Q9DD02', 'O35495', 'P70408', 'Q9QWY8', 'Q9CR86', 'Q9CW03', 'Q6PIE5', 'P97315', 'P51881', 'Q8BJU0', 'P54823', 'Q63810', 'P34152', 'P68368', 'P58404', 'Q91WM6', 'P59764', 'Q9QY01', 'P11031', 'Q8C033', 'Q8VDN2; Q6PIC6; Q6PIE5', 'Q7TT50', 'P46935', 'Q8BG89', 'Q8C0K5', 'Q3TES0', 'Q7TSH2', 'P55088', 'Q91YR1', 'P09405', 'P68372', 'Q921Q7', 'Q60610', 'Q8BG05', 'Q3UTJ2', 'Q9JM52', 'Q8C437', 'Q8BGC0', 'Q99JG2', 'P29699', 'P84244', 'Q8BK03', 'Q9Z2C4', 'P68254', 'Q5QNQ6', 'Q9JII1', 'Q7TMM9; A2AQ07; P68372', 'P35235', 'Q3UGS4', 'Q3UE31', 'Q9CQQ7', 'Q9DBN4', 'Q924N4', 'Q64337', 'P97291', 'Q9JKS5', 'Q9DCC8', 'Q9DBS2', 'Q8C3W1', 'Q9WU56', 'Q9R0N7', 'Q9WTT4', 'P97825', 'P27671', 'P05480', 'Q61097', 'Q9QXW9', 'B1AY13', 'Q99M08', 'G5E8P1', 'Q80TK0', 'Q9JM13', 'O70318', 'Q9WVF8', 'Q9CT10', 'Q6A065', 'Q8R2R3', 'Q80TS3', 'Q3UYC0', 'P07901; P11499', 'Q8VHG2', 'P70257', 'Q5XG69', 'Q80XU3', 'Q80TE7', 'P68404; P63318; P20444', 'Q3TZZ7', 'Q99KR6', 'Q91WK0', 'Q5SW75', 'Q69Z98', 'Q91ZZ3', 'Q9D7X1', 'Q8K4G5', 'Q9Z239', 'P16330', 'Q03391', 'Q9D0E3', 'Q9QYC0; Q9QYB5; Q9QYB8', 'P16546', 'O88502', 'P28667', 'Q80TL4', 'Q8VE19', 'P05063', 'Q08943', 'Q60720', 'Q9Z204', 'Q8K124', 'Q8BXR1', 'Q3U0M1', 'Q923T9', 'Q9Z1W9', 'Q9D0L8', 'Q62407', 'Q9WTQ5', 'Q3KNJ2', 'P47809', 'O35344', 'Q64511', 'Q8BH66', 'B2RY56', 'Q80VP1', 'Q8K3X4', 'Q8CC27', 'Q99J27', 'P60469', 'P12657', 'Q9JMD3', 'Q9ERD7', 'Q9JL04', 'P17182', 'Q68FL4', 'Q9D483', 'Q3USB7', 'Q810U3', 'Q9R1L5', 'P11627', 'Q3U1F9', 'Q9D7X8', 'O08919', 'Q8R0S2', 'P47856', 'O55022', 'A2A699', 'P26231; Q61301', 'Q99104', 'P97445', 'Q9QXZ0', 'Q9R0P4', 'Q3UGY8', 'P27546', 'Q80ZF8', 'P19426', 'Q4U2R1', 'Q63844', 'Q60780', 'P16283', 'P99027', 'Q8CCB4', 'Q91WL8', 'A2APV2', 'P35762', 'Q5DTW7', 'A2AN08', 'Q68FE7', 'Q8BG92', 'P24668', 'Q8CI75', 'Q7TME0', 'P62754', 'Q8BIK4', 'P63268', 'Q62167', 'Q8C0T5', 'Q9WV02', 'P58871', 'Q9QZI8', 'P70399', 'Q7TN29', 'Q9DCL8', 'Q3U5C7', 'Q9Z2C9', 'Q80Y56', 'Q9QXG4', 'Q4QQM4', 'Q61937', 'Q3UTZ3', 'Q9QXL2', 'Q99J77', 'Q9DB70', 'P00405', 'A2ARS0', 'P31650', 'Q8K3I9', 'Q8R1A4', 'Q4JIM5', 'P0C7M9', 'Q7TMM9; P68372', 'Q6PFR5', 'Q3UPL0', 'Q80U23', 'Q9QVP9', 'P30999', 'Q9QZQ8', 'Q9JK45', 'Q8K400', 'Q61235', 'O54825', 'Q8R1F6', 'Q8R344', 'Q91WG5', 'P28652; Q923T9', 'Q9EPB4', 'Q9Z140', 'P46660', 'Q9EPJ9', 'Q9CXE2', 'A2A935', 'Q6DFV3', 'Q5RJI5', 'Q9DCS2', 'Q8C3Q5', 'Q61137', 'Q8K1Z0', 'Q8CI71', 'P63328', 'P05132', 'Q8K4P8', 'P55144', 'P70670', 'P61982', 'P61750', 'Q80T41', 'P01942', 'Q61686', 'Q01815', 'Q7TQG1', 'Q60930', 'Q9Z103', 'Q8VDD5', 'P60879', 'Q3UHH1', 'Q9Z0U0', 'P57776', 'Q7TQD2', 'Q9Z188', 'P63318', 'Q6NZN0', 'P12960', 'P02088', 'Q8BFU3', 'Q8BJI1', 'Q60722', 'P14873', 'Q8R3Q2', 'Q8BM65', 'Q6PFD9', 'Q3UM45', 'Q9QXS6', 'P58283', 'Q9DC22', 'P18760', 'Q61120', 'Q9JI90', 'Q8K0U4', 'Q6P4S6', 'Q6WVG3', 'P17751', 'Q9DBT5', 'Q9CWE0', 'Q3TXX4', 'E9Q942', 'P62301', 'O70251', 'Q8QZV4', 'Q64010', 'Q80XI3', 'P07724', 'P36916', 'Q62108', 'Q9Z2D1', 'O08599', 'Q8CIN4', 'Q80YF9', 'Q68FH0', 'Q80TY0', 'Q9JJZ4', 'Q9ERR1', 'O88704', 'Q9CWU4', 'P70663', 'Q9CYG7', 'O88935', 'Q04573', 'P26645', 'Q9D2P8', 'P11798', 'O70589', 'Q6PDG5', 'Q9QYB8', 'Q61315', 'Q60931', 'A2AG50', 'P26039', 'Q8BP67', 'Q9CWK3', 'Q7TSG5', 'Q9EP82', 'P52479', 'A2TJV2', 'Q6PDL0', 'Q61161', 'Q8BLK9', 'B1AXH1', 'P51906', 'Q9D708', 'Q9ESN9', 'Q05A62', 'Q9DAZ9', 'Q99PI5', 'P14869', 'Q80XQ2', 'Q99J21', 'Q6PER3', 'Q9Z2A0', 'Q80W47', 'Q6IEE6', 'Q91Y86', 'Q03265', 'Q9ERZ3', 'P31648', 'Q6NZL0', 'Q8BX70', 'P08553', 'Q9QYE3', 'Q8CJ40', 'A2AQ07', 'Q8VDN2', 'Q8BJH1', 'Q8JZP2', 'Q9WVQ1', 'Q8R1B4', 'O70480', 'Q8K207', 'Q60902', 'Q91YS8', 'Q9D0L7', 'Q9CW07', 'Q8K310', 'Q91V14', 'P48962', 'Q148V7', 'Q8BPQ7', 'Q69ZH9', 'Q8CGU1', 'Q9QXS1', 'Q80Y24', 'Q2M3X8', 'Q9QYB5', 'O88703', 'Q68FM6', 'O35954', 'Q6P5U7', 'Q9EQF6', 'Q61151', 'Q69ZR2', 'Q8K298', 'Q68FE6', 'Q01097', 'P49070', 'Q6ZWR6', 'P28352', 'O35668', 'Q8BH82', 'Q9D7V2', 'Q8BKX1', 'Q80TR1', 'Q8CHG7', 'O54991', 'Q8CJI4', 'Q8VDN4', 'P10649', 'O35136', 'O54781', 'P97492', 'P56399', 'Q3V3V9', 'Q6NSW3', 'A6X919', 'P35436', 'Q6ZQK5', 'Q9ERH7', 'Q76LS9', 'Q8BVL3', 'P12367', 'Q60899', 'Q9JJV5', 'Q8BGT0', 'Q14BI2', 'Q80TM6', 'Q0P678', 'Q9CQY2', 'Q8VDQ8', 'P63011', 'Q8CAE9', 'Q9EPQ8', 'Q3UHJ0', 'Q1HFZ0', 'Q6PNC0', 'P62962', 'Q6ZPJ3', 'P06837', 'Q8CGA3', 'Q99N50', 'P30275', 'Q08274', 'O35245', 'Q60598', 'Q99LG1', 'Q9JJA9', 'Q9DC11', 'Q8CFK2', 'Q0VBF8', 'Q8BHG1', 'O70293', 'P61979', 'P46097', 'Q8VD04', 'P18581', 'Q62188', 'Q9EQG9', 'Q01065', 'Q69ZR9', 'Q61423', 'Q8JZQ9', 'P0C7L0', 'Q9DBC7', 'P55821', 'P98203', 'Q3U0V1', 'Q9Z2E1', 'Q6PE13', 'Q8CHT1', 'Q6NZJ6', 'P97820', 'Q8CGV2', 'Q99KK9', 'O55091', 'Q3UHK1', 'Q64332', 'Q8VDP4', 'Q6ZPJ0', 'Q02053', 'Q64523', 'Q8R0A7', 'Q9ESK9', 'Q8CDG3', 'P97412', 'Q3UL36', 'Q3TY60', 'Q8VD33', 'Q9JIX8', 'Q9WV69', 'Q921R7', 'P63141', 'Q8CH25', 'Q9D6F9', 'Q6P9N1', 'P26369', 'Q3UMB5', 'Q8R1Q8', 'Q8BK67', 'Q9D7S7', 'P80560', 'Q8VEK3', 'P97393', 'P35564', 'Q924A2', 'Q6PDM2', 'Q91ZP9', 'Q9Z2I9', 'Q8BXR9', 'Q8BWS5', 'Q99N28', 'P47911', 'Q5EBJ4', 'Q5SP85', 'Q8BGU5', 'P20917', 'Q9Z1Z0', 'Q68FD5', 'Q3UMU9', 'Q3TVA9', 'P59759', 'Q7TPH6', 'O88448', 'P97326', 'O54786', 'Q9Z0G7', 'P70441', 'Q64707', 'P49312', 'Q69ZW3', 'Q6NVE8', 'Q8CCJ4', 'P35803', 'Q9QZQ1', 'Q61823', 'Q91V36', 'E9PZJ8', 'Q8K394', 'Q80TZ9', 'Q8BIE6', 'Q80Z38', 'P70452', 'Q9WTK7', 'Q99KX1', 'Q80TS7', 'P21619', 'Q69ZX8', 'P39688', 'Q61037', 'Q6ZQ88', 'Q5SNZ0', 'P63268; P60710', 'O88792', 'Q9CXK9', 'Q5U405', 'Q9CQV8', 'O08739', 'Q8CCT4', 'P48962; P51881', 'Q02819', 'P0C192', 'P60764', 'O35681', 'P49586', 'Q9QYC0', 'O09126', 'Q60520', 'Q65Z40', 'Q8BMI3', 'Q8BYR5', 'Q9Z1B3', 'P68369; P68368', 'Q8CBW3', 'Q7TPV2', 'P56480', 'Q6P8I4', 'O55042', 'Q4VA53', 'Q8JZX4', 'Q9EPQ2', 'Q9JHU4', 'Q7TSJ2', 'Q6P542', 'Q7TMM9; Q9D6F9; Q9ERD7; P68372', 'Q61361', 'Q64012', 'E9Q5C9', 'Q91YL3', 'Q9CR29', 'O88532', 'Q69ZZ6', 'P46460', 'P39447', 'Q8C8K3', 'Q8K2K6', 'Q2TBE6', 'Q9D892', 'Q8K212', 'Q9CZV8', 'Q91WD5', 'P26231', 'Q9JJ69', 'Q60767', 'P70206', 'P84091', 'Q6P5B0', 'Q8R3I2', 'Q6PHZ8', 'Q62048', 'P60202', 'Q64322', 'P70392', 'O88746', 'Q8BLN6', 'Q5U3K5', 'Q8K4P0', 'Q8K0T0', 'P63094', 'Q3UHD9', 'Q3UJU9', 'Q9D0B0', 'Q9D5R2', 'Q07113', 'P54227; P55821', 'Q3UNH4', 'Q8BK08', 'Q60668', 'Q9WUD1', 'Q5FW52', 'Q8R464', 'Q8C1B1', 'Q62318', 'Q6DFV7', 'P19246', 'Q6P5E8', 'Q8K2H1', 'Q8R3Z5', 'Q80TZ3', 'P23198', 'Q5SV85', 'Q9D8T7', 'Q3UIL6', 'P26638', 'Q9CYZ2', 'P05064', 'Q8C6M1', 'Q3UHD1', 'O70439', 'Q80TA6', 'Q8CCX5', 'Q7TPM1', 'P17710', 'P10637', 'Q5F2E7', 'P05202', 'O08553; Q62188', 'Q80XK6', 'Q8BV79', 'Q8BH50', 'P16125', 'Q02248', 'P54227', 'Q62261', 'Q62073', 'Q5SVL6', 'Q68FD9', 'Q99KG3', 'O35864', 'Q7TQH0', 'E9Q6P5', 'Q6PIC6', 'Q9R1T4', 'P20444', 'O35678', 'P70169', 'Q6NXN1', 'O08553; P97427; Q62188', 'Q91W39', 'P59672', 'Q8CJ61', 'Q5DU25', 'F6SEU4', 'O09111', 'Q64213', 'Q9R0Q7', 'P18872', 'Q2PFD7', 'Q3UUF8', 'Q9QZ08', 'O88643', 'Q8BW96', 'P83093', 'Q61026', 'P51954', 'O88587', 'Q641P0', 'Q14BB9', 'Q99LD4', 'Q9Z1S3', 'P56564', 'Q7TQI3', 'Q99KY4', 'P58406', 'P97351', 'Q9DD18', 'Q3TXZ1', 'Q01338', 'P35802', 'O35607', 'E9Q3L2', 'Q922J3', 'Q80Z96', 'P08775', 'Q920I9', 'Q9QYX7', 'A2AJI0', 'Q8CGM1', 'Q8VBY2', 'Q7TMB8', 'P11798; P28652; Q923T9', 'Q91XV3', 'Q8CH77', 'Q8CC35', 'A2A690', 'O35250', 'Q811P8', 'G3X9J0', 'D3YXK2', 'Q9QX47', 'Q9EPR4', 'P68254; Q9CQV8; P63101', 'Q9R1Q8', 'Q8C2Q3', 'Q80V94', 'Q4KMM3', 'O89084', 'B2RUJ5', 'P54285', 'Q9QYR6', 'Q61699', 'Q2NL51; Q9WV60', 'P49025', 'A2APX8', 'Q8C0E2', 'P60710', 'P51432', 'Q9CY58', 'Q3UR70', 'Q91W92', 'Q80U57', 'Q9R0K7', 'Q9WTX2', 'Q9DBS5', 'O35526', 'F8VPU2', 'Q3THG9', 'Q61234', 'Q01063', 'G3XA57', 'E9Q8I9', 'P08249', 'O08749', 'Q71M36', 'Q7TPS5', 'Q9WVK4', 'Q9Z1E4', 'P17742', 'P39053', 'Q3U214', 'Q14CH0', 'A2AP18', 'Q61165']

class SearchDifferentialAnalysisTest(AsyncTestCase):
    @gen_test
    def test_post(self):
        client = AsyncHTTPClient()
        params = json_encode({"term": ["Q04447"]})
        request = HTTPRequest(
            f"http://localhost:8000/api/search/",
            method="POST",
            body=params
        )

        response = yield client.fetch(request)
        print(response.body)

    @gen_test
    def test_post2(self):
        client = AsyncHTTPClient()
        params = json_encode({"term": ["Ckb", "LRRK2"]})
        request = HTTPRequest(
            f"http://localhost:8000/api/search/",
            method="POST",
            body=params
        )

        response = yield client.fetch(request)
        print(response.body)

class ProjectHandlerTest(AsyncTestCase):
    @gen_test
    def test_get(self):
        client = AsyncHTTPClient()
        response = yield client.fetch("http://localhost:8000/api/project/1,2/")
        print(response.body)
    @gen_test
    def test_async(self):
        request = "https://rest.uniprot.org/idmapping/run"
        client = AsyncHTTPClient()
        body = urllib.parse.urlencode({
            "ids": ",".join(example).replace("; ", ","),
            "from": "UniProtKB_AC-ID",
            "to": "UniProtKB",
        })
        print(body)
        r = HTTPRequest(request, "POST", headers={"accept-encoding": "gzip, deflate, br"}, body=body)
        response = yield client.fetch(r)
        print(response)
        job = json_decode(response.body.decode("utf-8"))
        status_request = "https://rest.uniprot.org/idmapping/status/{}".format(job["jobId"])
        res = yield client.fetch(status_request)
        gzip_f = gzip.GzipFile(fileobj=BytesIO(res.body))
        print(gzip_f.read())

    def test_uniprot_parser(self):
        acc = set()
        for a in example:
            for i in a.split(";"):
                accession = UniprotSequence(i.strip(), parse_acc=True)
                if accession.accession:
                    acc.add(accession)
        parser = UniprotParser(acc, unique=True)
        df = []

        for res in parser.parse("tab", "post"):
            df.append(pd.read_csv(io.StringIO(res), sep="\t"))
        print(df)

