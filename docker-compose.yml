version: "3"

services:
  frontend:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-CelsusNG
    container_name: frontend
    restart: unless-stopped
    ports:
      - '8080:80' # Public HTTP Port
    volumes:
      - ./data/nginx/templates:/etc/nginx/templates
    networks:
      - celsus-net
    environment:
      - NGINX_HOST=localhost
  database:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-database
    container_name: database
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - celsus-net
  backend:
    tty: true
    stdin_open: true
    restart: always
    environment:
      - Database=postgresql://postgres:postgrespw@database:5432/projects
      - MongoDB=mongodb://root:mongo-celsus@mongo/
      - REDIS_HOST=redis://redis
      - AdminPassword=CelsusAdmin
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./data/celsus:/app/data
    networks:
      - celsus-net
    depends_on:
      - database
      - mongo
    command: bash -c "alembic upgrade head && python celsus/models.py && python main.py"
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    volumes:
      - /data/mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo-celsus
    networks:
      - celsus-net
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
  cache:
    container_name: redis
    image: redis:latest
    volumes:
      -  ./data/redis:/app/data
    ports:
      - "6379:6379"
    networks:
      - celsus-net
networks:
  celsus-net: